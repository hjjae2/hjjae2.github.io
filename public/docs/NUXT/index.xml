<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NUXT on thisandthat</title>
    <link>https://hjjae2.github.io/docs/NUXT/</link>
    <description>Recent content in NUXT on thisandthat</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://hjjae2.github.io/docs/NUXT/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/NUXT/NUXT-Nuxt-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/NUXT/NUXT-Nuxt-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4/</guid>
      <description> Nuxt LifeCycle # Nuxt ServerInit (lifecycle hook 호출) Route Middleware validate() asyncData() Vue lifecycle </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/NUXT/NUXT-Static-site-vs-SSR/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/NUXT/NUXT-Static-site-vs-SSR/</guid>
      <description>Static-Site vs SSR (in Nuxt) # Static-Site # 빌드 시에 완벽한 HMTL 페이지를 생성한다.
이 페이지들은 웹서버를 통해 전달된다.
페이지의 내용을 변경하기 위해서는 재빌드 되어야한다.
속도, 배포, 보안 측면에서 장점이 있다.
즉 빌드 시에 페이지를 완성시키고, 클라이언트의 요청이 들어오면 완성된 페이지를 전달하기만 하면 된다.
SSR # SSR 은 웹페이지를 브라우저에서 렌더링하지 않고 서버에서 렌더링하여 전달하는 것이다.
콘텐츠 변경(최신 유지) 등의 장점이 있다.
즉 클라이언트의 요청이 들어오면, 서버 측에서 렌더링을 진행하고 전달한다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/NUXT/NUXT-Vue-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/NUXT/NUXT-Vue-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4/</guid>
      <description>Vue Life-cycle # new Vue() Init (Event, Lifecycle) : 이벤트 &amp;amp; 라이프사이클 초기화 beforeCreate Init (injections &amp;amp; reactivity) : 반응성 주입 created &amp;hellip; (el, template 속성 확인 등) beforeMount mounted beforeUpdate updated beforeDestroy destroyed beforeCreate() # 가장 먼저 실행되는 훅이다.
Vue 인스턴스가 생성된 직후에 실행된다.
데이터(data), 이벤트(methods) 속성이 정의되어 있지 않다.
화면(template) 요소에 접근할 수 없다.
created() # 데이터(data)와 이벤트(methods)가 초기화되어, 접근할 수 있다.
화면(template) 요소에 접근할 수 없다.</description>
    </item>
    
  </channel>
</rss>
