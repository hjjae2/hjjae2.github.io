<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>코틀린 인 액션 on thisandthat</title>
    <link>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/</link>
    <description>Recent content in 코틀린 인 액션 on thisandthat</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/2%EC%9E%A5.-%EC%BD%94%ED%8B%80%EB%A6%B0-%EA%B8%B0%EC%B4%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/2%EC%9E%A5.-%EC%BD%94%ED%8B%80%EB%A6%B0-%EA%B8%B0%EC%B4%88/</guid>
      <description>기본적인 내용은 생략한다.
키워드 #프로퍼티 #변수 #함수 #클래스 #스마트캐스트 #예외처리
식 : 값을 만들어 내는 것 문장(문) : 값을 만들어내지 않는 것
2.1 기본 요소 : 함수와 변수 # 아래 내용을 통해 알 수 있는 것은 다음과 같다.
함수, 변수를 최상위 수준에 정의 가능 (꼭 클래스 내에 정의하는 것이 아니라) println : 코틀린 표준 라이브러리 → 표준 자바 라이브러리 함수를 간결하게 사용할 수 있도록 래핑 &amp;hellip; fun main(args: Array&amp;lt;String&amp;gt;) { println(&amp;#34;Hello, world!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/3%EC%9E%A5.-%ED%95%A8%EC%88%98-%EC%A0%95%EC%9D%98%EC%99%80-%ED%98%B8%EC%B6%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/3%EC%9E%A5.-%ED%95%A8%EC%88%98-%EC%A0%95%EC%9D%98%EC%99%80-%ED%98%B8%EC%B6%9C/</guid>
      <description>기본적인 내용은 생략한다.
키워드 # (자바와 다른) 함수 정의 / 함수 호출 확장 함수 (+ 프로퍼티) 3.1 코틀린에서 컬렉션 만들기 # 핵심 : 자바 컬렉션을 사용한다.
다양한 방법으로 컬렉션을 만들 수 있다.
val hashSet = hashSetOf(1, 7, 53) val arrayList = arrayListOf(1, 7, 53) val hashMap = hashMapOf(1 to &amp;#34;one&amp;#34;, 7 to &amp;#34;seven&amp;#34;, 53 to &amp;#34;fifty-three&amp;#34;) println(hashSet) // [1, 53, 7] | java.util.HashSet println(arrayList) // [1, 7, 53] | java.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/4%EC%9E%A5.-%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B0%9D%EC%B2%B4-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/4%EC%9E%A5.-%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B0%9D%EC%B2%B4-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</guid>
      <description>기본적인 내용은 생략한다.
키워드 # 인터페이스 프로퍼티 선언 가능 클래스 final final public sealed 중첩 클래스 중첩 클래스 vs 내부 클래스 초기화 블록 data 클래스 위임(delegation) object 싱글턴 객체 동반 객체 객체 식 + 참고 : 스마트 캐스트는 val(불변)일 때에만 사용 가능하다.
4.1 클래스 계층 정의 # 기본 가시성 다르다.
java : default kotlin : public sealed 클래스는 상속을 제한한다. (중첩(?), 내부(?) 클래스만 허용한다.)
4.1.1 코틀린 인터페이스 # 추상 메서드 구현이 있는 메서드 (default 메서드) 상태(필드) 자바와 다른 점이다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/5%EC%9E%A5.-%EB%9E%8C%EB%8B%A4%EB%A1%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/BOOKS/%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%9D%B8-%EC%95%A1%EC%85%98/5%EC%9E%A5.-%EB%9E%8C%EB%8B%A4%EB%A1%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</guid>
      <description>기본적인 내용은 생략한다.
키워드 # 람다, 멤버 참조 sequence (지연 컬렉션 연산) 함수형 인터페이스 (SAM 인터페이) 수신 객체 지정 람다 + 참고 : 스마트 캐스트는 val(불변)일 때에만 사용 가능하다.
5장. 람다로 프로그래밍 # 람다(= 람다 식)은 기본적으로 다른 함수에 넘길 수 있는 작은 코드 조각을 뜻한다.
5.1 람다 식과 멤버 참조 # 5.1.1 람다 소개 : 코드 블록을 함수 인자로 넘기기 # button.setOnClickListener { /* 클릭 시 수행할 동작 */ } 5.</description>
    </item>
    
  </channel>
</rss>
