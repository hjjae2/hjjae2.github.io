<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on thisandthat</title>
    <link>https://hjjae2.github.io/docs/LANGUAGES/PHP/</link>
    <description>Recent content in PHP on thisandthat</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://hjjae2.github.io/docs/LANGUAGES/PHP/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-CodeIgniter-Library-%EB%A1%9C%EB%94%A9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-CodeIgniter-Library-%EB%A1%9C%EB%94%A9/</guid>
      <description>이번 글은 CodeIgniter 2.x 기준으로 작성된 글이며, 커스터마이징 되어 있는 부분이 있기에 일반적인 상황과 조금은 다를 수 있습니다.
개요 # (팀에서) PHP 프레임워크 CodeIgniter(2.x, 3.x)를 사용하고 있다.
CodeIgniter는 MVC 패턴으로, 대부분이 그렇듯 controller 는 client 의 요청을 받고, view 는 화면 노출을 위해 사용되며 model 은 DB I/O 역할을 수행한다.
여기에 추가로 Library 라는 개념(디렉터리 구조에 포함)이 있다. Library 는 말그대로 공통으로 사용될 기능들에 대한 클래스(library)를 만들어두고 사용하기 위해 존재한다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-CodeIgniter-xss_clean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-CodeIgniter-xss_clean/</guid>
      <description>CodeIgniter xss_clean() 메서드 살펴보기
개요 # 오픈소스에서 제공하는 xss_clean() 메서드를 사용하고 있는데, 오탐으로 인해 사용자가 입력한 데이터가 변경되어 문제가 발생했다.
문제가 발생한 문자열은 아래와 같다.
원본 데이터
... HgrSLy0VBO71Kjbr3Co7h76WU0QB1rVT61QGGT5/M/9pPf/muYF3eSdTkxDOZkXZT8vFUwbZiUyX BGVvMC1epaCn329BFB4G3B+gJPa5k2OjlfogcT0jYWA0sUe1O/7bmW6sEfMwoTqh/VbGQLc/Eawz mB8+Oxgvkhri175eT62jHhCKyseBKZU4JvyOLNzyMh4g3UU6TkuzKdLdc2Lmk4uEDT5qOs2Kkqnf KuJyrG3L5oNFuRw= -----END NEW CERTIFICATE REQUEST----- 변경된 데이터
... HgrSLy0VBO71Kjbr3Co7h76WU0QB1rVT61QGGT5/M/9pPf/muYF3eSdTkxDOZkXZT8vFUwbZiUyX BGVvMC1epaCn329BFB4G3B+gJPa5k2OjlfogcT0jYWA0sUe1O/7bmW6sEfMwoTqh/VbGQLc/Eawz mB8+Oxgvkhri175eT62jHhCKyseBKZU4JvyOLNzyMh4g3UU6TkuzKdLdc2Lmk4uEDT5qOs2Kkqnf KuJyrG3L5 NEW CERTIFICATE REQUEST----- xss_clean() 살펴보기 # xss_clean 메서드가 어떻게 구현되어 있는지 살펴보기 위해 상속하고 있는 클래스를 따라가본다.
A Class ---&amp;gt; MYRest_Controller ---&amp;gt; REST_Controller ---&amp;gt; CI_Controller
class A extends MYRest_Controller { .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-Function-Return-Type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-Function-Return-Type/</guid>
      <description>PHP7부터 function 에 return type 을 명시할 수 있다.
function isTrue(): bool { return true; } &amp;lsquo;function 내부의 return 값&amp;rsquo; 과 &amp;lsquo;명시된 type&amp;rsquo; 이 다를 경우 # (암묵적으로) function 내부의 return 값의 타입을 변환한다.
function isTrue(): bool { return 1; } var_dump(isTrue()); // 출력: bool(true) declare(strict_types=1); 선언을 통해 위와 같은 암묵적인 변환을 막을 수도 있다. 즉, 엄격하게 타입을 체크할 수 있다.
위 선언을 해주면, IDE에서는 곧바로 빨간줄이 생긴다.
참고 # https://wiki.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-PHP-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjjae2.github.io/docs/LANGUAGES/PHP/PHP-PHP-%EA%B8%B0%EB%B3%B8/</guid>
      <description>PHP 기본 # PHP(Hypertext Preprocessor)는 server-side html-embedded 스크립트 언어(&amp;ldquo;서버에서 실행되며 HTML 을 포함하는 스크립트 언어&amp;rdquo;)이다.
html 내용을 php 확장자로 저장하여도 아무런 지장이 없다. 1개의 프로세스를 생성한 후, 그 안에서 여러 개의 쓰레드를 생성하여 응답/처리하는 방식이다.
PHP 를 이해하기 위해서 알아야 할 가장 큰 것은, &amp;lsquo;PHP 는 1개가 아니다&amp;rsquo; 라는 것이다.
PHP 는 스크립트(Script)다. # PHP 로 웹 서비스를 할 때, 웹서버는 단순히 중개 역할을 해준다. 예를 들어, PHP 파일에 대한 요청이 오면 이 요청을 PHP Interpreter 에게 넘겨주고, 응답을 받아 브라우저에게 최종적으로 응답하는 것이다.</description>
    </item>
    
  </channel>
</rss>
